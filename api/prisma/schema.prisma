// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Feedback {
  id        String   @id @default(uuid())
  star      Int
  message   String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now()) @db.Timestamp(3)
}

model Post {
  id        String     @id @default(uuid())
  title     String
  content   String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  feedbacks Feedback[]
  likes     Like[]
  status    Status     @default(DRAFT)
  createdAt DateTime   @default(now()) @db.Timestamp(3)
}

model Like {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now()) @db.Timestamp(3)

  @@unique([userId, postId])
}

model User {
  id        String     @id @default(uuid())
  lastname  String
  firstname String
  email     String     @unique
  password  String
  posts     Post[]
  feedbacks Feedback[]
  likes     Like[]
  createdAt DateTime   @default(now()) @db.Timestamp(3)
}

enum Status {
  DRAFT
  PUBLISH
}
